"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","1","","core-js-conditions-n-loops","","core-js-conditions-n-loops","getSpiralMatrix should return a matrix of size * size that is filled with numbers in ascending order","getSpiralMatrix should return a matrix of size * size that is filled with numbers in ascending order",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","0","","core-js-conditions-n-loops","","core-js-conditions-n-loops","convertToRomanNumerals should return the number converted to Roman numerals","convertToRomanNumerals should return the number converted to Roman numerals",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","1","","core-js-conditions-n-loops","","core-js-conditions-n-loops","isIsoscelesTriangle should return boolean whether the triangle is isosceles","isIsoscelesTriangle should return boolean whether the triangle is isosceles",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","0","","core-js-conditions-n-loops optimal implementation","","core-js-conditions-n-loops optimal implementation","speed test of getNearestBigger","speed test of getNearestBigger",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","1","","core-js-conditions-n-loops","","core-js-conditions-n-loops","isPalindrome should return a boolean value whether a string is palindrome","isPalindrome should return a boolean value whether a string is palindrome",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","1","","core-js-conditions-n-loops","","core-js-conditions-n-loops","rotateMatrix should return the original array rotated by an angle of 90 degrees clockwise","rotateMatrix should return the original array rotated by an angle of 90 degrees clockwise",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","0","","core-js-conditions-n-loops","","core-js-conditions-n-loops","isContainNumber should bool value whether the number contains the desired digit","isContainNumber should bool value whether the number contains the desired digit",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","0","","core-js-conditions-n-loops","","core-js-conditions-n-loops","getIndexOf should return a bool value if the string contains the desired letter","getIndexOf should return a bool value if the string contains the desired letter",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","6","","core-js-conditions-n-loops optimal implementation","","core-js-conditions-n-loops optimal implementation","speed test of sortByAsc","speed test of sortByAsc",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","1","","core-js-conditions-n-loops","","core-js-conditions-n-loops","getMaxNumber should return the maximum of three numbers","getMaxNumber should return the maximum of three numbers",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","1","","core-js-conditions-n-loops","","core-js-conditions-n-loops","shuffleChar should return a string in which characters with an odd index are moved to the end of the string at each iteration","shuffleChar should return a string in which characters with an odd index are moved to the end of the string at each iteration",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","1","","core-js-conditions-n-loops","","core-js-conditions-n-loops","isPositive should return a boolean value whether a number is positive","isPositive should return a boolean value whether a number is positive",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","1","","core-js-conditions-n-loops","","core-js-conditions-n-loops","getNearestBigger should return the nearest larger number made up of the digits of the original number","getNearestBigger should return the nearest larger number made up of the digits of the original number",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","6","","core-js-conditions-n-loops optimal implementation","","core-js-conditions-n-loops optimal implementation","speed test of shuffleChar","speed test of shuffleChar",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","1","","core-js-conditions-n-loops","","core-js-conditions-n-loops","convertNumberToString should the original number as a string with numbers replaced by words","convertNumberToString should the original number as a string with numbers replaced by words",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","2","","core-js-conditions-n-loops","","core-js-conditions-n-loops","getBalanceIndex should returns the index of the balancer element","getBalanceIndex should returns the index of the balancer element",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","0","","core-js-conditions-n-loops","","core-js-conditions-n-loops","sortByAsc should return a sorted array","sortByAsc should return a sorted array",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","0","","core-js-conditions-n-loops","","core-js-conditions-n-loops","canQueenCaptureKing should return true if a queen can capture a king","canQueenCaptureKing should return true if a queen can capture a king",""
"passed","Sun Jan 07 13:15:56 UTC 2024","Sun Jan 07 13:15:56 UTC 2024","0","","core-js-conditions-n-loops optimal implementation","","core-js-conditions-n-loops optimal implementation","optimal implementation of convertNumberToString","optimal implementation of convertNumberToString",""
