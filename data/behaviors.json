{"uid":"b1a8273437954620fa374b796ffaacdd","children":[{"name":"isPositive should return a boolean value whether a number is positive","uid":"74be03d09125a34c","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175648,"stop":1704633175649,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"canQueenCaptureKing should return true if a queen can capture a king","uid":"116ff0c106e21dec","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175649,"stop":1704633175650,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"getMaxNumber should return the maximum of three numbers","uid":"ae92dc5e494f8fa9","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175649,"stop":1704633175649,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"convertToRomanNumerals should return the number converted to Roman numerals","uid":"43a91aa40a2f6af4","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175650,"stop":1704633175650,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"isIsoscelesTriangle should return boolean whether the triangle is isosceles","uid":"90504cb945fc3ef","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175650,"stop":1704633175650,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"convertNumberToString should the original number as a string with numbers replaced by words","uid":"7f5540bd5e3ad012","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175651,"stop":1704633175651,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"getIndexOf should return a bool value if the string contains the desired letter","uid":"94e33d7f71b2efc7","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175652,"stop":1704633175652,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"isPalindrome should return a boolean value whether a string is palindrome","uid":"f0e0fefbe5b0378","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175652,"stop":1704633175652,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"isContainNumber should bool value whether the number contains the desired digit","uid":"77a38de55c3d92c9","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175652,"stop":1704633175652,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"getBalanceIndex should returns the index of the balancer element","uid":"509c9ac22c3690a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175653,"stop":1704633175654,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"getSpiralMatrix should return a matrix of size * size that is filled with numbers in ascending order","uid":"67f536d4a9a8568e","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175654,"stop":1704633175655,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"rotateMatrix should return the original array rotated by an angle of 90 degrees clockwise","uid":"e5f2a4e9ab2e02ef","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175655,"stop":1704633175656,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"sortByAsc should return a sorted array","uid":"6ca3bc74ddba8a04","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175656,"stop":1704633175657,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"shuffleChar should return a string in which characters with an odd index are moved to the end of the string at each iteration","uid":"73945066ea28abb0","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175657,"stop":1704633175658,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"getNearestBigger should return the nearest larger number made up of the digits of the original number","uid":"2a6420635edf0651","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175658,"stop":1704633175659,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"optimal implementation of convertNumberToString","uid":"60491c065e478231","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175681,"stop":1704633175681,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"speed test of sortByAsc","uid":"ed71f363ed7ecf93","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175681,"stop":1704633175688,"duration":7},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"speed test of shuffleChar","uid":"e28a6a126a71b41c","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175688,"stop":1704633175694,"duration":6},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"speed test of getNearestBigger","uid":"e6d8e545819580c5","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1704633175694,"stop":1704633175694,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"name":"behaviors"}